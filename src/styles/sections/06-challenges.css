/**************************************
 * C1-TicTacToe.jsx
 **************************************/
.tic-tac-toe {
  height: 400px;
  width: 400px;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  gap: 1rem;
}

/**************************************
* C2-Staircase.jsx
**************************************/
.staircase {
  height: 350px;
  width: 700px;
  grid-template-columns: repeat(7, 1fr);
  grid-template-rows: repeat(7, 1fr);
}

.staircase div {
  display: grid;
  place-items: center;
  background-color: var(--purp);
}

.stair-1 {
  grid-column: 1 / span 1;
  grid-row: 7 / span 1;
}

.stair-2 {
  grid-column: 2 / span 1;
  grid-row: 6 / span 2;
}

.stair-3 {
  grid-column: 3 / span 1;
  grid-row: 5 / span 3;
}

.stair-4 {
  grid-column: 4 / span 1;
  grid-row: 4 / span 4;
}

.stair-5 {
  grid-column: 5 / span 1;
  grid-row: 3 / span 5;
}

.stair-6 {
  grid-column: 6 / span 1;
  grid-row: 2 / span 6;
}

.stair-7 {
  grid-column: 7 / span 1;
  grid-row: 1 / span 7;
}
/**************************************
* C2-Staircase.jsx
**************************************/
.pyramid {
  height: 500px;
  width: 900px;
  grid-template-columns: repeat(9, 1fr);
  grid-template-rows: repeat(5, 1fr);
  grid-template-areas:
    ".... .... .... .... lvl5 .... .... .... ...."
    ".... .... .... lvl4 lvl4 lvl4 .... .... ...."
    ".... .... lvl3 lvl3 lvl3 lvl3 lvl3 .... ...."
    ".... lvl2 lvl2 lvl2 lvl2 lvl2 lvl2 lvl2 ...."
    "lvl1 lvl1 lvl1 lvl1 lvl1 lvl1 lvl1 lvl1 lvl1";
}

.pyramid div {
  background-color: var(--purp);
}

.lvl5 {
  grid-area: lvl5;
}

.lvl4 {
  grid-area: lvl4;
}

.lvl3 {
  grid-area: lvl3;
}

.lvl2 {
  grid-area: lvl2;
}

.lvl1 {
  grid-area: lvl1;
}

/**************************************
* C4-Target.jsx
 **************************************/
.target {
  grid-template-columns: repeat(5, [c-start] 1fr [c-end]);
  grid-template-rows: repeat(5, [r-start] 1fr [r-end]);
  height: 400px;
  width: 400px;
}

.target .inline {
  color: var(--platinum);
}

.target-left.filled {
  grid-column: span 1;
  grid-row: span 5;
}

.target-top.filled {
  grid-column: 2 / span 3;
}

.target-right.filled {
  grid-column: c-start 5 / c-end 5;
  grid-row: r-start 1 / r-end 5;
}

.target-center.filled {
  grid-column: c-start 3 / c-end 3;
  grid-row: r-start 3 / r-end 3;
}

.target-bottom.filled {
  grid-column: c-start 2 / c-end 4;
  grid-row: r-start 5 / r-end 5;
}

.target-left.detailed {
  grid-column: span 1;
  grid-row: span 5;
  background-color: aliceblue;
}

.target-top.detailed {
  grid-column: 2 / span 3;
  background-color: hotpink;
}

.target-right.detailed {
  grid-column: c-start 5 / c-end 5;
  grid-row: r-start 1 / r-end 5;
  background-color: darkorange;
}

.target-center.detailed {
  grid-column: c-start 3 / c-end 3;
  grid-row: r-start 3 / r-end 3;
  background-color: cyan;
}

.target-bottom.detailed {
  grid-column: c-start 2 / c-end 4;
  grid-row: r-start 5 / r-end 5;
  background-color: gold;
}

/**************************************
 * PlainSpiral.jsx
 **************************************/
.spiral {
  height: 400px;
  width: 400px;
  grid-template:
    "long long long long long long long long ...."
    "tall .... .... .... .... .... .... rght ...."
    "tall .... left top  top  top  .... rght ...."
    "tall .... left .... .... innr .... rght ...."
    "tall .... left .... cntr innr .... rght ...."
    "tall .... left .... .... .... .... rght ...."
    "tall .... ibtm ibtm ibtm ibtm ibtm rght ...."
    "tall .... .... .... .... .... .... .... ...."
    "tall bttm bttm bttm bttm bttm bttm bttm bttm";

  grid-template-columns: repeat(9, 1fr);
  grid-template-rows: repeat(9, 1fr);
}

.spiral div {
  background-color: var(--purp);
}

.spiral .bttm {
  grid-area: bttm;
}

.spiral .tall {
  grid-area: tall;
}

.spiral .long {
  grid-area: long;
}

.spiral .right {
  grid-area: rght;
}

.spiral .ibtm {
  grid-area: ibtm;
}

.spiral .left {
  grid-area: left;
}

.spiral .top {
  grid-area: top;
}

.spiral .innr {
  grid-area: innr;
}

.spiral .cntr {
  grid-area: cntr;
}

/**************************************
 * C6-BrickWall.jsx
 **************************************/
.brick-wall {
  height: 450px;
  width: 800px;
  grid-template-columns: repeat(21, 1fr);
  grid-template-rows: repeat(10, 1fr);
  gap: 0.75rem;
}

.brick-wall div {
  background-color: #cb4154;
}

/* .brick-wall div {
    background-image: url("../../components/chapters/06-challenges/visuals/C6-brick-texture.jpg");
  } */

.short-brick {
  grid-column: span 1;
}

.long-brick {
  grid-column: span 2;
}

/**************************************
* C6-BrickWall.jsx
**************************************/
.basket-weave {
  height: 400px;
  width: 400px;

  grid-template:
    "a a b b c c d d"
    "a a b b c c d d"
    "e e f f g g h h"
    "e e f f g g h h"
    "i i j j k k l l"
    "i i j j k k l l"
    "m m n n o o p p "
    "m m n n o o p p ";
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(8, 1fr);
  gap: 0.25rem;
}

.under-weave {
  z-index: 2;
}

.over-weave {
  z-index: 3;
}

.horiz {
  background-color: darkgoldenrod;
  grid-column: span 2;
}

.vert {
  background-color: bisque;
  grid-row: span 2;
}

.a {
  grid-area: a;
}

.b {
  grid-area: b;
}

.c {
  grid-area: c;
}

.d {
  grid-area: d;
}

.e {
  grid-area: e;
}

.f {
  grid-area: f;
}

.g {
  grid-area: g;
}

.h {
  grid-area: h;
}

.a {
  grid-area: a;
}

.a {
  grid-area: a;
}

.a {
  grid-area: a;
}

.a {
  grid-area: a;
}

.a {
  grid-area: a;
}

.a {
  grid-area: a;
}

.a {
  grid-area: a;
}

.a {
  grid-area: a;
}

/**************************************
* C9-Maze.jsx
**************************************/
.maze {
  height: 800px;
  width: 800px;
  grid-template-columns: repeat(21, [c] 1fr);
  grid-template-rows: repeat(21, [r] 1fr);
}

.maze div {
  background-color: var(--purp);
}

/* Start/Finish */
#start,
#finish {
  display: grid;
  place-items: center;
}

#start {
  grid-column: c 11;
  grid-row: r 1;
  background-color: darkgreen;
}

#finish {
  grid-column: c 10 / c 13;
  grid-row: r 10 / r 12;
  background-color: black;

  font-size: var(--size-4);
}

/* Outer Edges */
.top-left {
  grid-column: c 2 / c 11;
  grid-row: r 2;
}

.top-right {
  grid-column: c 12 / c 21;
  grid-row: r 2;
}

.left-wall,
.right-wall {
  grid-row: r 2 / r 21;
}

.right-wall {
  grid-column: c 21;
}

.bottom-wall {
  grid-column: c 1 / span 21;
  grid-row: r 21;
}

.enter-left {
  grid-column: c 10;
}

.enter-right {
  grid-column: c 12;
}

/* Finish Walls */
.fin-top {
  grid-column: c 9 / c 14;
  grid-row: r 9;
}

.fin-left {
  grid-column: c 9;
  grid-row: r 10 / r 13;
}

.fin-right {
  grid-column: c 13;
  grid-row: r 10 / r 13;
}

.fin-b-left {
  grid-column: c 10;
  grid-row: r 12;
}

.fin-b-right {
  grid-column: c 12;
  grid-row: r 12;
}
